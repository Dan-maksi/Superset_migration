version: '3.8'

services:

  db:
    image: postgres:13
    container_name: postgres
    restart: always
    ports: 
      - 5432:5432
    environment:
      POSTGRES_DB: metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
    networks:
      - trino-net

  metastore:
    build:
        context: ./hive-image
    container_name: metastore
    ports:
      - 9083:9083
    environment:
       SERVICE_NAME: metastore
       DB_DRIVER: postgres
       DB_URL: jdbc:postgresql://postgres:5432/metastore
       DB_USER: hive
       DB_PASSWORD: hive
    depends_on:
      - db
    volumes:
    - ./hive-config/core-site.xml:/opt/hive/conf/core-site.xml
    - ./hive-config/hive-site.xml:/opt/hive/conf/hive-site.xml
    networks:
      - trino-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9083"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

    
  trino:
    image: trinodb/trino:latest
    container_name: trino
    ports:
      - 8080:8080
    volumes:
      - ./trino/catalog:/etc/trino/catalog
    depends_on:
      - metastore
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/info"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - trino-net

  superset:
      build:
        context: ./superset
      container_name: superset
      ports:
        - "8088:8088"
      environment:
        - SUPERSET_SECRET_KEY=supersecret
        - PYTHONPATH=/app/pythonpath
      depends_on:
        - trino
      command: >
        /bin/bash -c "
          superset db upgrade &&
          superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin &&
          superset init &&
          superset run -h 0.0.0.0 -p 8088"
      networks:
      - trino-net


  superset2:
      build:
        context: ./superset
      container_name: superset2
      ports:
        - "8090:8088"
      environment:
        - SUPERSET_SECRET_KEY=supersecret
        - PYTHONPATH=/app/pythonpath
      depends_on:
        - trino
      command: >
        /bin/bash -c "
          superset db upgrade &&
          superset fab create-admin --username admin --firstname Admin --lastname User --email admin@superset.com --password admin &&
          superset init &&
          superset run -h 0.0.0.0 -p 8088"
      networks:
      - trino-net


  minio:
    image: minio/minio
    container_name:  minio
    volumes:
      - ./data/sales:/data
    ports:
      - "9000:9000"
      - "9001:9001"
      - "8021:8021"
      - "8022:8022"
      - "30000-30010:30000-30010"
    environment:
      - MINIO_ROOT_USER=s3key
      - MINIO_ROOT_PASSWORD=s3keysecret
    command: 'server --console-address ":9001" /data'
    networks:
      - trino-net

  createbuckets:
      image: minio/mc
      volumes:
        - ./data/test:/data
      depends_on:
        - minio
      entrypoint:
        - /bin/sh
        - -c
        - |
          mc alias set myminio http://minio:9000 s3key s3keysecret;
          mc admin user add myminio trino trino_100;
          mc admin policy attach myminio readwrite --user trino;
          mc mb myminio/demo;
          mc anonymous set download myminio/demo;
          mc cp --recursive /data/. myminio/demo;
          exit 0;
      networks:
      - trino-net

networks:
    trino-net:
      driver: bridge
      name: trino_network